# Generated by Django 4.1.3 on 2022-12-01 12:35

from django.db import migrations, models
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='ModelAccountUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('created', models.DateTimeField(auto_now_add=True, help_text='Date and time when this entry was created in the system')),
                ('updated', models.DateTimeField(auto_now=True, help_text='Date and time when the table data was last updated in the system')),
                ('uid', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Unique identification number for the user.', unique=True)),
                ('email', models.EmailField(help_text='Email of the user.', max_length=225, unique=True)),
                ('phone_number', models.CharField(blank=True, help_text="What is the user's phone number?", max_length=60, null=True)),
                ('first_name', models.CharField(blank=True, help_text="What is the user's first name?", max_length=60, null=True)),
                ('last_name', models.CharField(blank=True, help_text="what is the user's last name?", max_length=60, null=True)),
                ('country', models.CharField(blank=True, help_text="What is the user's country?", max_length=200, null=True)),
                ('city', models.CharField(blank=True, help_text="What is the user's city?", max_length=200, null=True)),
                ('is_active', models.BooleanField(default=False, help_text='Is the user active?')),
                ('is_staff', models.BooleanField(default=False, help_text='Is the user as a staff member?')),
                ('is_superuser', models.BooleanField(default=False, help_text='Is the user a super user?')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
                'db_table': 'account_user',
            },
        ),
    ]
